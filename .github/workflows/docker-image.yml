name: Build and Deploy to AKS with Helm

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME: acematureacr                         # without .azurecr.io
  ACR_LOGIN_SERVER: acematureacr.azurecr.io
  IMAGE_NAME: frontend
  CHART_PATH: Application-Code/frontend/frontend-chart
  NAMESPACE: default
  AKS_CLUSTER_NAME: AceMatureAKSV2
  RESOURCE_GROUP: ACEProjectRG2

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Azure Login with OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Login to ACR
      run: az acr login --name $ACR_NAME

    - name: Set IMAGE_TAG
      run: |
        echo "IMAGE_TAG=git-${GITHUB_SHA::7}" >> $GITHUB_ENV
        echo "$GITHUB_ENV"

    - name: Build and Push Docker Image
      run: |
        docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG Application-Code/frontend/
        docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG

    - name: Update values.yaml with image tag
      run: |
        sed -i "s|image:.*|image: $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG|" $CHART_PATH/values.yaml

    - name: Set AKS Context
      run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME --overwrite-existing

    - name: Deploy to AKS with Helm
      run: |
        helm upgrade --install $IMAGE_NAME $CHART_PATH \
          --namespace $NAMESPACE --create-namespace \
          -f $CHART_PATH/values.yaml
